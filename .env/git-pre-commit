#!/usr/bin/env bash

# Regexp for grep to only choose some file extensions for formatting
#exts="\.\(ext\|ext2\)$"
exts="\.pl$"

formatter=$(which ${HOME}/perl5/bin/perltidy)
if [ -z "$formatter" ]
then
  1>&2 echo "$formatter not found. Pre-commit formatting will not be done."
  exit 0
fi

# Format staged files
for file in `git diff --cached --name-only --diff-filter=ACMR | grep $exts`
do
  echo "Formatting $file"
  # Get the file from index
  git show ":$file" |"$formatter" > "$file.tmp"
  # Create a blob object from the formatted file
  hash=`git hash-object -w "$file.tmp"`
  # Add it back to index
  #git update-index --add --cacheinfo 100644 "$hash" "$file"
  git update-index --add --cacheinfo 100755 "$hash" "$file"
  # Remove the tmp file
  #cat "$file.tmp" >"${file}" && rm "$file.tmp"
  rm "$file.tmp"
  git show ":$file" > "$file"
done

# If no files left in index after formatting - fail
ret=0
if [ ! "`git diff --cached --name-only`" ]; then
  1>&2 echo "No files left after formatting"
  exit 1
fi
